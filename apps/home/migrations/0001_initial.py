# Generated by Django 2.2.6 on 2020-11-25 13:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bidders',
            fields=[
                ('pk_bidders', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Digite o CPF ou CNPJ no formato XX.XXX.XXX/XXXX-XX ou XXX.XXX.XXX-XX.', regex='(^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$)|(^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}$)')], verbose_name='CPF / CNPJ')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Digite o telefone no formato (XX) 12345-6789. Entre 8 ou 9 digitos', regex='^\\([A-Za-z\\S]{3}\\.\\w+\\)|\\([A-Za-z\\S]{3}\\.\\w+\\)')], verbose_name='Nome')),
                ('email', models.CharField(blank=True, default='', max_length=255, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, default='', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Digite o telefone no formato (XX) 12345-6789. Entre 8 ou 9 digitos', regex='^\\(\\d{2}\\) [\\d\\-]{9,10}$')], verbose_name='Telefone')),
                ('insert_date', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Alterado em')),
            ],
            options={
                'verbose_name': 'Proponente',
                'verbose_name_plural': 'Proponentes',
                'db_table': 'sme_bidders',
            },
        ),
        migrations.CreateModel(
            name='BiddersBuildings',
            fields=[
                ('pk_bidders_buildings', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('cep', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite o CEP no formato XXXXX-XXX. Com 8 digitos', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('quarter', models.CharField(max_length=255, verbose_name='Bairro')),
                ('number', models.CharField(max_length=255, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('latitude', models.FloatField(verbose_name='Latitude')),
                ('longitude', models.FloatField(verbose_name='longitude')),
                ('number_iptu', models.CharField(max_length=20, verbose_name='Número IPTU')),
                ('insert_date', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Alterado em')),
                ('fk_bidders', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Bidders', verbose_name='Proponente')),
            ],
            options={
                'verbose_name': 'Imóvel',
                'verbose_name_plural': 'Imóveis',
                'db_table': 'sme_bidders_buildings',
            },
        ),
        migrations.CreateModel(
            name='TypeBidders',
            fields=[
                ('pk_type_bidders', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('insert_date', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Alterado em')),
            ],
            options={
                'verbose_name': 'Tipo de Proponente',
                'verbose_name_plural': 'Tipos de Proponentes',
                'db_table': 'sme_type_bidders',
            },
        ),
        migrations.CreateModel(
            name='BiddersBuildingsDocsImages',
            fields=[
                ('pk_bidders_buildings_docs_images', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('document', models.FileField(upload_to='', verbose_name='Documetos/Imagens')),
                ('flag_type_docs', models.SmallIntegerField(choices=[(1, 'Fotos da Fachada'), (2, 'Fotos do Ambiente Interno'), (3, 'Cópia do IPTU ou ITR'), (4, 'Cópia da Planta ou Croqui')], verbose_name='Tipo Documento')),
                ('flag_type_file', models.SmallIntegerField(choices=[(1, 'Imagem'), (2, 'Documento')], verbose_name='Tipo Arquivo')),
                ('insert_date', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Alterado em')),
                ('fk_bidders_buildings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.BiddersBuildings', verbose_name='Imóvel')),
            ],
            options={
                'verbose_name': 'Imóvel Doc & Imagem',
                'verbose_name_plural': 'Imóvel Docs & Imagens',
                'db_table': 'sme_bidders_buildings_docs_imgs',
            },
        ),
        migrations.CreateModel(
            name='BiddersBuildingsContacts',
            fields=[
                ('pk_bidders_buildings_contacts', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('cep', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite o CEP no formato XXXXX-XXX. Com 8 digitos', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('quarter', models.CharField(max_length=255, verbose_name='Bairro')),
                ('number', models.CharField(max_length=255, verbose_name='Número')),
                ('flag_default', models.SmallIntegerField(choices=[('Sim', True), ('Não', False)], verbose_name='default')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('insert_date', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Alterado em')),
                ('fk_bidders_buildings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.BiddersBuildings', verbose_name='Proponente')),
            ],
            options={
                'verbose_name': 'Contato do Imóvel',
                'verbose_name_plural': 'Contatos do Imóvel',
                'db_table': 'sme_bidders_buildings_contacts',
            },
        ),
        migrations.AddField(
            model_name='bidders',
            name='fk_type_bidders',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.TypeBidders', verbose_name='Tipo'),
        ),
    ]
